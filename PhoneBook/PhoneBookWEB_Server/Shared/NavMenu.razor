@inject IUserRepository _UserRepository;
@inject NavigationManager _NavigationManager;
@inject IJSRuntime _JSRuntime;

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Phone Book</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav">
        <div class="nav-item px-3"></div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="User/create">
                <span class="oi oi-plus" aria-hidden="true"></span> Add Contact
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/User">
                <span class="oi oi-list-rich" aria-hidden="true"></span> All Contacts
            </NavLink>
        </div>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
        <form class="example">
            <input type="text" @bind-value="@SearchTerm" placeholder="Search.." name="search">
            <NavLink button @onclick="()=>Search(SearchTerm)"><i class="fa fa-search"></i></NavLink>
        </form>

    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        if (!_NavigationManager.Uri.Contains("Search"))
        {
            collapseNavMenu = !collapseNavMenu;
        }
    }



    private IEnumerable<UserModelDTO> UserList { get; set; } = new List<UserModelDTO>();

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(LoadUsers);
    }
    
    private void LoadUsers()
    {
        UserList = _UserRepository.GetAllUsers();
    }

    public string SearchTerm { get; set; } = String.Empty;

    private void Search(string searchTerm)
    {
        _NavigationManager.NavigateTo($"/AdditionalPages/SearchResult/{searchTerm}");
        SearchTerm = String.Empty;        
    }
    
}