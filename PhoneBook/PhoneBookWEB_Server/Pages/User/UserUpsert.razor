@page "/User/create"
@using Business.Repository
@inject IUserRepository _UserRepository;
@inject NavigationManager _NavigationManager;

<div class="row my-2">
    <h3 class="card-title text-primary mb-3">@Title Contact</h3>
    <div class="col-6">
        <EditForm Model="User" OnValidSubmit="UpsertUser">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            @*            <ValidationSummary></ValidationSummary>
            *@            <div class="form-control">
                <label>Name</label>
                <InputText @bind-Value="User.Name" class="form-control" />
                <ValidationMessage For="()=>User.Name"></ValidationMessage>
            </div>
            <div class="form-control">
                <label>Phone</label>
                <InputText @bind-Value="User.Phone" class="form-control" />
                <ValidationMessage For="()=>User.Phone"></ValidationMessage>
            </div>
            <div class="form-control">
                <label>Email</label>
                <InputText @bind-Value="User.Email" class="form-control" />
            </div>
            <div class="form-control">
                <label>Address</label>
                <InputText @bind-Value="User.Address" class="form-control" />
            </div>
            <div class="form-control">
                <label>Facebook</label>
                <InputText @bind-Value="User.Facebook" class="form-control" />
            </div>
            <div class="form-control">
                <button class="btn btn-primary">@Title</button>
                <NavLink class="btn alert-dark" href="/User">Back To Index</NavLink>
            </div>
        </EditForm>
    </div>

</div>
@code {
    private UserModelDTO User { get; set; } = new UserModelDTO();
    private string Title { get; set; } = "Create";
    //write logic for UpsertUser that will be called when the form is submitted and will call the API
    private void UpsertUser()
    {
        _UserRepository.CreateUser(User);
        _NavigationManager.NavigateTo("User");
    }
}
